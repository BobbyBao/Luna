let setmetatable = setmetatable

let Time = Time

class Timer : Observer {
	var eventType = ""

	init (fn, duration, loop, scale, evtType) {
	
		loop = loop or 1
		self.fn = fn
		self.duration = duration
		self.loop = loop
		self.running = false
		self.eventType = evtType or "Update"
		self.scale = scale or false and true	
		self.time = duration	
	}

	func reset(fn, duration, loop, scale) {
		self.fn			= fn	
		self.duration 	= duration
		self.loop		= loop or 1	
		self.scale = scale
		self.time = duration	
	}

	func start() {	
		self.subscribeGlobalEvent(self.eventType, self.update)
		self.running = true
	}

	func stop() {
		self.running = false
		self.unsubscribeGlobalEvent(self.eventType, self.update)
	}

	func update() {

		if not self.running {
			return
		}

		let delta = self.scale and Time.deltaTime or Time.unscaledDeltaTime	

		self.time = self.time - delta

		if self.time <= 0 {
			self.fn()
			
			if self.loop > 0 {
				self.loop = self.loop - 1
				self.time = self.time + self.duration
			}
			
			if self.loop == 0 {
				self.stop()
			} else if self.loop < 0 {
				self.time = self.time + self.duration
			}
		}
	}
}
