let rawget = rawget
let uTime = UnityEngine.Time

var counter = 1


var _set = {

	fixedDeltaTime = func (v) {
		Time.fixedDeltaTime = v
		uTime.fixedDeltaTime = v
	},

	maximumDeltaTime = func (v) {
		Time.maximumDeltaTime = v
		uTime.maximumDeltaTime = v
	},

	timeScale = func (v) {
		Time.timeScale = v
		uTime.timeScale = v
	},

	captureFramerate = func (v) {
		Time.captureFramerate = v
		uTime.captureFramerate = v
	},

	timeSinceLevelLoad = func (v) {
		Time.timeSinceLevelLoad = v
	},

}

class Time {
	deltaTime			= 0
	fixedDeltaTime 	 	= 0
	maximumDeltaTime	= 0.3333333
	fixedTime			= 0
	frameCount			= 1
	realtimeSinceStartup= 0
	time 				= 0
	timeScale			= 1
	timeSinceLevelLoad	= 0
	unscaledDeltaTime	= 0	
	unscaledTime		= 0
	
	func setDeltaTime(deltaTime, unscaledDeltaTime) {
	
		let _Time = Time
		_Time.deltaTime = deltaTime	
		_Time.unscaledDeltaTime = unscaledDeltaTime
		counter = counter - 1

		_Time.time = _Time.time + deltaTime
		_Time.realtimeSinceStartup = _Time.realtimeSinceStartup + unscaledDeltaTime
		_Time.timeSinceLevelLoad = _Time.timeSinceLevelLoad + deltaTime	
		_Time.unscaledTime = _Time.unscaledTime + unscaledDeltaTime 
		
	}

	func setFixedDelta(fixedDeltaTime)	{
		Time.deltaTime = fixedDeltaTime
		Time.fixedDeltaTime = fixedDeltaTime
		Time.fixedTime = Time.fixedTime + fixedDeltaTime
	}

	func setFrameCount() {
		Time.frameCount = Time.frameCount + 1
	}

	func setTimeScale(scale) {
		let last = Time.timeScale
		Time.timeScale = scale
		uTime.timeScale = scale
		return last
	}

	func __index(t, k) {
		let v = rawget(Time, k)
		
		if v {
			return v
		}

		return uTime.__index(uTime, k)	
	}

	func __newindex(t, k, v) {
		let fn = rawget(_set, k)

		if fn {
			return fn(v)
		}
	}

}

Time.time = uTime.time
Time.timeSinceLevelLoad = uTime.timeSinceLevelLoad
Time.unscaledTime = uTime.unscaledTime
Time.realtimeSinceStartup = uTime.realtimeSinceStartup
Time.frameCount = uTime.frameCount

UnityEngine.Time = Time

if uTime != nil {
	Time.maximumDeltaTime = uTime.maximumDeltaTime	
	Time.timeScale = uTime.timeScale	
}
