
let unpack = unpack or table.unpack

//对coroutine.wrap函数进行扩充
func coroutine.wrap(fn, self){
    return func(...){ 
        let co = coroutine.create(fn)
        //print("coroutine.wrap", ...)
        if self {
            coroutine.resume(co, self, ...)
        } else {
            coroutine.resume(co, ...)
        }
    }
}

func coroutine.__async(async_func, callback_pos) {
    return func(...) {
        var _co = coroutine.running() or error ('this function must be run in coroutine')
        var rets
        var waiting = false
        local func cb_func(...) {
            if waiting {
                coroutine.resume(_co, ...)
            } else {
                rets = {...}
            }
        }
        var params = {...}
        table.insert(params, callback_pos or (#params + 1), cb_func)
        async_func(unpack(params))
        if rets == nil {
            waiting = true
            rets = {coroutine.yield()}
        }
        
        return unpack(rets)
    }
}
