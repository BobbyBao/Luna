
let unpack = unpack or table.unpack

class Generator {
	var move_end = {}

	init(fn, ...) {
		let params = {...}
	    self.w_func = func() {
            fn(unpack(params))
            return Generator.move_end
        }

		self.reset()
	}

    func moveNext() {
		self.current = self.coro()
		if self.current == Generator.move_end {
			self.current = nil
			return false
		} else {
			return true
		}
	}

    func reset() {
		self.coro = coroutine.wrap(self.w_func)	
    }
    
    func start(...) {
        return luna.startCoroutine(Generator(...))
    }

    func yield(param, ...) {
        if type(param) =="function" {
            coroutine.yield(Generator.start(param, ...))
        } else {
            coroutine.yield(param, ...)
        }
    }

    func stop(c) {
        luna.stopCoroutine(c)
    }

}
