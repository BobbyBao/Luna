
import "class"

class List {
	var len_ = 0
	
	init(n) {
		self.len_ = n
	}

	func len() {
		return self.len_
	}

	func __len() {
		return self.len_
	}

	func push(i) {
		self[self.len_] = i
		self.len_ = self.len_ + 1
	}

	func append(i) {
		self:push(i)
		return self
	}

	func insert(i, x) {
		var idx = self.len_
		while i <= idx {

			if idx == i {				
				self[i] = x
				self.len_ = self.len_ + 1
				break
			}

			self[idx] = self[idx - 1]
			idx = idx - 1
		} 
		
		return self
	}

	func remove (idx) {
		
		repeat {
			self[idx] = self[idx + 1]
			idx = idx + 1
		} until(idx == self.len_ - 1)

		table.remove(self, self.len_ - 1)
		self.len_ = self.len_ - 1
		return self
	}

	func clear() {

		while self.len_ > 0 {
			self.len_ = self.len_ - 1
			table.remove(self, self.len_)
		} 

	}

	func iter() {
		var k = -1
		return func (t) {
			k = k + 1
			if k < t.len_ {
				return t[k]
			}
			
		}, self
	}
	
}

func __array(c, len) {
	setmetatable(c, List)
	c.len_ = len
}